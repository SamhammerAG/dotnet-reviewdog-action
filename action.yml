name: Dotnet Reviewdog
description: Analyzes a build log file to verify the code style
author: Samhammer AG
branding:
  color: green
  icon: alert-triangle
inputs:
  name:
    required: false
    default: dotnet
    description: Optional. The name of the job that is added to your workflow. Default is dotnet.
  build_log_file:
    required: false
    default: dotnet.buildlog
    description: Optional. The file that is analyzed. Default is dotnet.buildlog.
  line_exclude_regex:
    required: false
    default: ""
    description: Optional. Exclude specific warnings by a regex. Default is empty.
  github_token:
    required: false
    default: ${{ github.token }}
    description: Optional. Default is github.token.
  level:
    required: false
    default: error
    description: Optional. Report level for reviewdog [info,warning,error]. Default is error.
  reporter:
    required: false
    default: github-pr-review
    description: Optional. Reporter of reviewdog command [github-pr-check,github-check,github-pr-review]. Default is github-pr-review.
  fail_on_error:
    required: false
    default: "false"
    description: Optional. Exit code for reviewdog when errors are found [true,false] Default is false.
  reviewdog_flags:
    required: false
    default: ""
    description: Optional. Additional reviewdog flags
  workdir:
    required: false
    default: "."
    description: Optional. The directory from which to look for the build log file and run reviewdog. Default '.'
runs:
  using: composite
  steps:
    - name: Reviewdog
      shell: bash
      run: |
        cd "${{ inputs.workdir }}";

        if [ -z "${{ inputs.line_exclude_regex }}" ]
        then
          cat "${{ inputs.build_log_file }}" | sort | uniq > ${{ inputs.build_log_file }}.filtered
        else
          cat "${{ inputs.build_log_file }}" | sort | uniq | grep -Ev '${{ inputs.line_exclude_regex }}' > ${{ inputs.build_log_file }}.filtered
        fi

        cat "${{ inputs.build_log_file }}.filtered" \
        | reviewdog \
            -name="${{ inputs.name }}" \
            -reporter="${{ inputs.reporter }}" \
            -fail-on-error=${{ inputs.fail_on_error }} \
            -efm=" %#%f(%l\\,%c): %*[warning,error] %m" \
            -efm="%#%f : %*[warning,error] %m" \
            -level="${{ inputs.level }}" \
            ${{ inputs.reviewdog_flags }}
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ inputs.github_token }}
